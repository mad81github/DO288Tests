apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: "2020-12-08T15:37:15Z"
    generation: 1
    labels:
      app: quotesapi
      app.kubernetes.io/component: quotesapi
      app.kubernetes.io/instance: quotesapi
    managedFields:
    - apiVersion: image.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
      manager: oc
      operation: Update
      time: "2020-12-08T15:37:15Z"
    name: quotesapi
    namespace: madavila-quotes-dev
    resourceVersion: "70057879"
    selfLink: /apis/image.openshift.io/v1/namespaces/madavila-quotes-dev/imagestreams/quotesapi
    uid: 8cae42be-b2f9-4c44-bdeb-abb0b79b7f38
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/madavila-quotes-dev/quotesapi
    publicDockerImageRepository: default-route-openshift-image-registry.apps.eu45.prod.nextcle.com/madavila-quotes-dev/quotesapi
    tags:
    - items:
      - created: "2020-12-08T15:37:51Z"
        dockerImageReference: image-registry.openshift-image-registry.svc:5000/madavila-quotes-dev/quotesapi@sha256:b44ed7c9bf5df410c626beee14b139b4e52bafc4fb6d39674c5005c47923fffb
        generation: 1
        image: sha256:b44ed7c9bf5df410c626beee14b139b4e52bafc4fb6d39674c5005c47923fffb
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2020-12-08T15:37:08Z"
    creationTimestamp: "2020-12-08T15:37:02Z"
    generation: 2
    name: quotesdb
    namespace: madavila-quotes-dev
    resourceVersion: "70057454"
    selfLink: /apis/image.openshift.io/v1/namespaces/madavila-quotes-dev/imagestreams/quotesdb
    uid: 6dfbba4f-b03a-4a6c-b0ad-b773a8baff0d
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: image-registry.openshift-image-registry.svc:5000/openshift/mysql:5.7
      generation: 2
      importPolicy: {}
      name: "5.7"
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/madavila-quotes-dev/quotesdb
    publicDockerImageRepository: default-route-openshift-image-registry.apps.eu45.prod.nextcle.com/madavila-quotes-dev/quotesdb
    tags:
    - items:
      - created: "2020-12-08T15:37:08Z"
        dockerImageReference: image-registry.openshift-image-registry.svc:5000/openshift/mysql@sha256:9a781abe7581cc141e14a7e404ec34125b3e89c008b14f4e7b41e094fd3049fe
        generation: 2
        image: sha256:9a781abe7581cc141e14a7e404ec34125b3e89c008b14f4e7b41e094fd3049fe
      tag: "5.7"
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 4f522e8d-5ac6-433d-82fa-8f9a4c84617a
      openshift.io/token-secret.name: builder-token-svv7j
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IjZzZTFCQTFLWl9PZnBNQ0MyaXJXMm5kdEdnVmdYMnJKMHUtNGpILUg0RjQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYWRhdmlsYS1xdW90ZXMtZGV2Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImJ1aWxkZXItdG9rZW4tc3Z2N2oiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiYnVpbGRlciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjRmNTIyZThkLTVhYzYtNDMzZC04MmZhLThmOWE0Yzg0NjE3YSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYWRhdmlsYS1xdW90ZXMtZGV2OmJ1aWxkZXIifQ.vVvhuC6hS8d7DWf4en1OLLcrdmaZIqOPNmkWiKCNYZAXmPpWXHDUrofU9_vmwWM-7lva38rP9CAyhp_1__1I3VwQswc7WqgvfEQK_FCcI9hC4AyiqzEIfCxBixaXRmsKDLY85MhA5fwpBvizLvw6E7aCfoyaCA6x3WUysFtiMy_ydBofrPFKkHNhyNWPoJUtdSOYSxPCGFvLMNhrS5arusHhP8yXgUQ6eGB1DIXjVA9uXUD0TD4Oe4ulUTjt60QfjUjJ85oAIlfRI_uQfnw6-xSh_-9kOmTDp8HTj0I8KizzbRO-sIuYPmkzOMrDMVlzVp6UiRoVXOEoujSJLrWvlg
    creationTimestamp: "2020-12-08T15:37:02Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bb6e7d26-d9ae-4f82-9616-d75d2830a6d1"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2020-12-08T15:37:02Z"
    name: builder-dockercfg-spp8p
    namespace: madavila-quotes-dev
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: builder-token-svv7j
      uid: bb6e7d26-d9ae-4f82-9616-d75d2830a6d1
    resourceVersion: "70057351"
    selfLink: /api/v1/namespaces/madavila-quotes-dev/secrets/builder-dockercfg-spp8p
    uid: 553cf9a6-db18-4f2f-a7d5-a83f45b01dfb
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: bWFkYXZpbGEtcXVvdGVzLWRldg==
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqWnpaVEZDUVRGTFdsOVBabkJOUTBNeWFYSlhNbTVrZEVkblZtZFlNbkpLTUhVdE5HcElMVWcwUmpRaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp0WVdSaGRtbHNZUzF4ZFc5MFpYTXRaR1YySWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaV055WlhRdWJtRnRaU0k2SW1KMWFXeGtaWEl0ZEc5clpXNHRjM1oyTjJvaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVluVnBiR1JsY2lJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SWpSbU5USXlaVGhrTFRWaFl6WXRORE16WkMwNE1tWmhMVGhtT1dFMFl6ZzBOakUzWVNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHRZV1JoZG1sc1lTMXhkVzkwWlhNdFpHVjJPbUoxYVd4a1pYSWlmUS52VnZodUM2aFM4ZDdEV2Y0ZW4xT0xMY3JkbWFaSXFPUE5ta1dpS0NOWVpBWG1QcFdYSERVcm9mVTlfdm13V00tN2x2YTM4clA5Q0F5aHBfMV9fMUkzVndRc3djN1dxZ3ZmRVFLX0ZDY0k5aEM0QXlpcXpFSWZDeEJpeGFYUm1zS0RMWTg1TWhBNWZ3cEJ2aXpMdnc2RTdhQ2ZveWFDQTZ4M1dVeXNGdGlNeV95ZEJvZnJQRktrSE5oeU5XUG9KVXRkU09ZU3hQQ0dGdkxNTmhyUzVhcnVzSGhQOHlYZ1VRNmVHQjFESVhqVkE5dVhVRDBURDRPZTR1bFVUanQ2MFFmalVqSjg1b0FJbGZSSV91UWZudzYteFNoXy05a09tVERwOEhUajBJOEtpenpiUk8tc0l1WVBta3pPTXJETVZselZwNlVpUm9WWE9Fb3VqU0pMcld2bGc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 4f522e8d-5ac6-433d-82fa-8f9a4c84617a
    creationTimestamp: "2020-12-08T15:37:02Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2020-12-08T15:37:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2020-12-08T15:37:02Z"
    name: builder-token-svv7j
    namespace: madavila-quotes-dev
    resourceVersion: "70057348"
    selfLink: /api/v1/namespaces/madavila-quotes-dev/secrets/builder-token-svv7j
    uid: bb6e7d26-d9ae-4f82-9616-d75d2830a6d1
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: 
    namespace: bWFkYXZpbGEtcXVvdGVzLWRldg==
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqWnpaVEZDUVRGTFdsOVBabkJOUTBNeWFYSlhNbTVrZEVkblZtZFlNbkpLTUhVdE5HcElMVWcwUmpRaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp0WVdSaGRtbHNZUzF4ZFc5MFpYTXRaR1YySWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaV055WlhRdWJtRnRaU0k2SW1KMWFXeGtaWEl0ZEc5clpXNHRlRFV5Y1d3aUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVluVnBiR1JsY2lJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SWpSbU5USXlaVGhrTFRWaFl6WXRORE16WkMwNE1tWmhMVGhtT1dFMFl6ZzBOakUzWVNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHRZV1JoZG1sc1lTMXhkVzkwWlhNdFpHVjJPbUoxYVd4a1pYSWlmUS5nZXpMU1lFeGdBeVRsVzNfTTNwXzJGUHpPT1VqcjVzYXhJT1pvTkFmZF9YOWFKWmRwcXB2VWNoNE5scG9hN0tLYk9PMnZtLW5NN2lENWI2ZnVlcjlsdmdTYl9nT1AxNTJNRU5mN0p0ZGxYOWlmY19fRVJZbE8tdHUtS253WXlmS1ZoUS1YYndPcGlta1FGaEEtTGN4RDlKQlRZNXUzS1VTZUVKQlk2ZzVlWTI5UHBvdEItbndRcVBMc2t4Q0NtNjBKQU9wUVBBXy05S2FadzhsdjRQYjh5ZnUxVHpia21JWkR2WVBmVFJkSGxNcEdVVm45M2lZMHZFeVkwMmNXRXNQcmd1ZkhhT3VlTERMY1FaZXFpcjlPMjZKUUx6X01lRExHLUFacVFQRmhrVUhnM0JvcnpxRGt5anFSTVFZZTJ4RE90NUFRLVAzdXRuR05HQXI4QWtEb0E=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 4f522e8d-5ac6-433d-82fa-8f9a4c84617a
    creationTimestamp: "2020-12-08T15:37:02Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: kube-controller-manager
      operation: Update
      time: "2020-12-08T15:37:02Z"
    name: builder-token-x52ql
    namespace: madavila-quotes-dev
    resourceVersion: "70057339"
    selfLink: /api/v1/namespaces/madavila-quotes-dev/secrets/builder-token-x52ql
    uid: 71fa4f32-200d-4613-a63c-626278bf9a15
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 5bc6c038-41c6-4216-b7fa-8f227923161e
      openshift.io/token-secret.name: default-token-jhk82
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IjZzZTFCQTFLWl9PZnBNQ0MyaXJXMm5kdEdnVmdYMnJKMHUtNGpILUg0RjQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYWRhdmlsYS1xdW90ZXMtZGV2Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tamhrODIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjViYzZjMDM4LTQxYzYtNDIxNi1iN2ZhLThmMjI3OTIzMTYxZSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYWRhdmlsYS1xdW90ZXMtZGV2OmRlZmF1bHQifQ.IMY7gLVidPbgdJ628RqNUEqUOZ0GwBKuRbIxO9g-ymdIRqjWjvLBuVf6tjuKb5oVUiyDsDqY-jcfAK9lVWbUEkXItSSGJg7AmIBiALm37EPLpRcdxbKlPS9q0h13hpe8lhdPRi-IvhHwna-eOHCDlrTQl73ph_KMPplVZvsJD8PlLzwoMW7cAYGAikPRaTlrpHAilR-VZm2pn22aRixTR0HyF9AHWaYuxJvkGEwWAFhKpHaMKCsK8XjwW0CeJzO7nvFfC3vWNVgoFnNAfRLcVmipFjrDyP2zlV-bNiJkwiYfGULoDWqMYTWNtZAYoXXxB-hRgEywWWwIna0HT9sS7A
    creationTimestamp: "2020-12-08T15:37:02Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"af9aad56-846c-4975-9deb-ab583d879396"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2020-12-08T15:37:02Z"
    name: default-dockercfg-64gc2
    namespace: madavila-quotes-dev
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: default-token-jhk82
      uid: af9aad56-846c-4975-9deb-ab583d879396
    resourceVersion: "70057354"
    selfLink: /api/v1/namespaces/madavila-quotes-dev/secrets/default-dockercfg-64gc2
    uid: cb2af0e4-d563-4d5c-8ea3-df529fc47183
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: bWFkYXZpbGEtcXVvdGVzLWRldg==
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqWnpaVEZDUVRGTFdsOVBabkJOUTBNeWFYSlhNbTVrZEVkblZtZFlNbkpLTUhVdE5HcElMVWcwUmpRaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp0WVdSaGRtbHNZUzF4ZFc5MFpYTXRaR1YySWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaV055WlhRdWJtRnRaU0k2SW1SbFptRjFiSFF0ZEc5clpXNHRhbWhyT0RJaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SWpWaVl6WmpNRE00TFRReFl6WXROREl4TmkxaU4yWmhMVGhtTWpJM09USXpNVFl4WlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHRZV1JoZG1sc1lTMXhkVzkwWlhNdFpHVjJPbVJsWm1GMWJIUWlmUS5JTVk3Z0xWaWRQYmdkSjYyOFJxTlVFcVVPWjBHd0JLdVJiSXhPOWcteW1kSVJxaldqdkxCdVZmNnRqdUtiNW9WVWl5RHNEcVktamNmQUs5bFZXYlVFa1hJdFNTR0pnN0FtSUJpQUxtMzdFUExwUmNkeGJLbFBTOXEwaDEzaHBlOGxoZFBSaS1JdmhId25hLWVPSENEbHJUUWw3M3BoX0tNUHBsVlp2c0pEOFBsTHp3b01XN2NBWUdBaWtQUmFUbHJwSEFpbFItVlptMnBuMjJhUml4VFIwSHlGOUFIV2FZdXhKdmtHRXdXQUZoS3BIYU1LQ3NLOFhqd1cwQ2VKek83bnZGZkMzdldOVmdvRm5OQWZSTGNWbWlwRmpyRHlQMnpsVi1iTmlKa3dpWWZHVUxvRFdxTVlUV050WkFZb1hYeEItaFJnRXl3V1d3SW5hMEhUOXNTN0E=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 5bc6c038-41c6-4216-b7fa-8f227923161e
    creationTimestamp: "2020-12-08T15:37:02Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2020-12-08T15:37:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2020-12-08T15:37:02Z"
    name: default-token-jhk82
    namespace: madavila-quotes-dev
    resourceVersion: "70057349"
    selfLink: /api/v1/namespaces/madavila-quotes-dev/secrets/default-token-jhk82
    uid: af9aad56-846c-4975-9deb-ab583d879396
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: 
    namespace: bWFkYXZpbGEtcXVvdGVzLWRldg==
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqWnpaVEZDUVRGTFdsOVBabkJOUTBNeWFYSlhNbTVrZEVkblZtZFlNbkpLTUhVdE5HcElMVWcwUmpRaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp0WVdSaGRtbHNZUzF4ZFc5MFpYTXRaR1YySWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaV055WlhRdWJtRnRaU0k2SW1SbFptRjFiSFF0ZEc5clpXNHRkbk54ZHpVaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVpHVm1ZWFZzZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SWpWaVl6WmpNRE00TFRReFl6WXROREl4TmkxaU4yWmhMVGhtTWpJM09USXpNVFl4WlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHRZV1JoZG1sc1lTMXhkVzkwWlhNdFpHVjJPbVJsWm1GMWJIUWlmUS5iRVNrcExTaTQ2SXBfOUNObG9qQUpKNEhKc3BSc21HU1RsVXQ2cVdKXzhYZUN6aVdjQ0FmTmVBZ2FoUGx1UlEzNDJyeFFhb0xUYnlHME5vNXEzTlFkek0xQVhiS2J4TmljN2F4U0dsRjNLS2pXNk1ZM1VCOU5wOGd4WVZOMFJ2blBMdTA0bEJXdUNFVWVhdENPOFNYWlpIbVhRb1BIeFlxejJyZ2E5TkxwTm9TMndOYkNtbU1nT0xjUjA3TnpGdXJMMVoxZlo4cFpLQVR5SG1SSjRETnNVenFfR2NMcWdZd2pLaGlJdTJZMmNBZ2FMX0VGcUtKQUI1WVg1VnRrel8tdWREVndidjVzZXB5c3dRYjZidWY5QTNjZnpxMTRhcXdTUGI5OXlZNV95WmExNFVpdUlHOXVMTWc5RVBLWXNqWTdaMGdPZ1RkWGRqbnNSTFU2TVB6Snc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 5bc6c038-41c6-4216-b7fa-8f227923161e
    creationTimestamp: "2020-12-08T15:37:02Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: kube-controller-manager
      operation: Update
      time: "2020-12-08T15:37:02Z"
    name: default-token-vsqw5
    namespace: madavila-quotes-dev
    resourceVersion: "70057344"
    selfLink: /api/v1/namespaces/madavila-quotes-dev/secrets/default-token-vsqw5
    uid: 6aa99c46-2786-427f-a4cc-9b7b090a11d2
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: ada7b3a2-efe8-4175-9004-429bc1e1fc53
      openshift.io/token-secret.name: deployer-token-w94g2
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IjZzZTFCQTFLWl9PZnBNQ0MyaXJXMm5kdEdnVmdYMnJKMHUtNGpILUg0RjQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYWRhdmlsYS1xdW90ZXMtZGV2Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlcGxveWVyLXRva2VuLXc5NGcyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlcGxveWVyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiYWRhN2IzYTItZWZlOC00MTc1LTkwMDQtNDI5YmMxZTFmYzUzIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Om1hZGF2aWxhLXF1b3Rlcy1kZXY6ZGVwbG95ZXIifQ.PIoes-ganQDYp-I1wcFGTLd5vQ11p6Bpj2ICer9oriWRDyFNVsr7FwIQaR4JkxnDk6kN3RQ-H2MO0CD5wNo_pYBIBSNcty6eGwFwRiiDecR3ur532qyQL9ptPBLtc6usAglBFW5JQQbycQqjPTM05RnoHb4n-Y2CAQzM6HXW8c_FFpBAYZ9GZDjEGRTFzScq5YYNDo7sVd_150bxaVQ7b8umnZfUdqKVYRs6Mu58ll1udXuRd7dvYJCNuljidI8bYa_tQ_5ETIWzC5V7Ms3G0JioC01xiI46Qkf79dty6nhACRZz3XF2-UKg4H-943AFLknZzJDgr4Z9kLVe1pGi-g
    creationTimestamp: "2020-12-08T15:37:02Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"360d6b8f-67c9-42cc-a3e3-12c0fb6e2445"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2020-12-08T15:37:02Z"
    name: deployer-dockercfg-ngqlw
    namespace: madavila-quotes-dev
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: deployer-token-w94g2
      uid: 360d6b8f-67c9-42cc-a3e3-12c0fb6e2445
    resourceVersion: "70057358"
    selfLink: /api/v1/namespaces/madavila-quotes-dev/secrets/deployer-dockercfg-ngqlw
    uid: 1588fb2e-e6aa-423c-afb7-ba665d56926c
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: bWFkYXZpbGEtcXVvdGVzLWRldg==
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqWnpaVEZDUVRGTFdsOVBabkJOUTBNeWFYSlhNbTVrZEVkblZtZFlNbkpLTUhVdE5HcElMVWcwUmpRaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp0WVdSaGRtbHNZUzF4ZFc5MFpYTXRaR1YySWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaV055WlhRdWJtRnRaU0k2SW1SbGNHeHZlV1Z5TFhSdmEyVnVMVFI2WXpkc0lpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVibUZ0WlNJNkltUmxjR3h2ZVdWeUlpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVlXUmhOMkl6WVRJdFpXWmxPQzAwTVRjMUxUa3dNRFF0TkRJNVltTXhaVEZtWXpVeklpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPbTFoWkdGMmFXeGhMWEYxYjNSbGN5MWtaWFk2WkdWd2JHOTVaWElpZlEuZlF6ajRpb2dZeFVKR2ZreHhweFJraFlwb0JqWDZjQk5FY2xoampNY055VzVvcEdmV044TEhjSnNwUHBNejcxNXNoUzdNU3VpLWJjMTFxaWpERC1SMmVhellhUWJZVHI2ZFVnMThIWklTVWhaZHphR1pxTm9leFdyR01GY1pod3FJbFd6VzJINTdiNWVpZ1BFSXRNbzd1WmpXanVQcFJBVXAza1g0clhBYXl2TUx2RG1ScDRSRWgxNllkYWZSTkVvZGViRFNlODBDaTVmN3BSZWkwOTF1R2hIVGs5Q1hNVXlFSi1KSVlmVUl4RUpNeDc3UHc0Vk1KQW9KY1FEWTdMVmJpWnpRWGVxd0lONVFHc1RTTl9pUlRrdTBPbFFaZ3lSNUt4aHdMeExwQndCTVZJRzdpc3JhQWxiYWV0S3J1QmgyOS11cVA5Z3h5ek1OZmlWYXhhdmVn
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: ada7b3a2-efe8-4175-9004-429bc1e1fc53
    creationTimestamp: "2020-12-08T15:37:02Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: kube-controller-manager
      operation: Update
      time: "2020-12-08T15:37:02Z"
    name: deployer-token-4zc7l
    namespace: madavila-quotes-dev
    resourceVersion: "70057346"
    selfLink: /api/v1/namespaces/madavila-quotes-dev/secrets/deployer-token-4zc7l
    uid: dae8bd4e-5fb5-4bfa-9171-fe07c5e6f0e6
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: 
    namespace: bWFkYXZpbGEtcXVvdGVzLWRldg==
    service-ca.crt: 
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqWnpaVEZDUVRGTFdsOVBabkJOUTBNeWFYSlhNbTVrZEVkblZtZFlNbkpLTUhVdE5HcElMVWcwUmpRaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp0WVdSaGRtbHNZUzF4ZFc5MFpYTXRaR1YySWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaV055WlhRdWJtRnRaU0k2SW1SbGNHeHZlV1Z5TFhSdmEyVnVMWGM1TkdjeUlpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVibUZ0WlNJNkltUmxjR3h2ZVdWeUlpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVlXUmhOMkl6WVRJdFpXWmxPQzAwTVRjMUxUa3dNRFF0TkRJNVltTXhaVEZtWXpVeklpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPbTFoWkdGMmFXeGhMWEYxYjNSbGN5MWtaWFk2WkdWd2JHOTVaWElpZlEuUElvZXMtZ2FuUURZcC1JMXdjRkdUTGQ1dlExMXA2QnBqMklDZXI5b3JpV1JEeUZOVnNyN0Z3SVFhUjRKa3huRGs2a04zUlEtSDJNTzBDRDV3Tm9fcFlCSUJTTmN0eTZlR3dGd1JpaURlY1IzdXI1MzJxeVFMOXB0UEJMdGM2dXNBZ2xCRlc1SlFRYnljUXFqUFRNMDVSbm9IYjRuLVkyQ0FRek02SFhXOGNfRkZwQkFZWjlHWkRqRUdSVEZ6U2NxNVlZTkRvN3NWZF8xNTBieGFWUTdiOHVtblpmVWRxS1ZZUnM2TXU1OGxsMXVkWHVSZDdkdllKQ051bGppZEk4YllhX3RRXzVFVElXekM1VjdNczNHMEppb0MwMXhpSTQ2UWtmNzlkdHk2bmhBQ1JaejNYRjItVUtnNEgtOTQzQUZMa25aekpEZ3I0WjlrTFZlMXBHaS1n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: ada7b3a2-efe8-4175-9004-429bc1e1fc53
    creationTimestamp: "2020-12-08T15:37:02Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2020-12-08T15:37:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2020-12-08T15:37:02Z"
    name: deployer-token-w94g2
    namespace: madavila-quotes-dev
    resourceVersion: "70057353"
    selfLink: /api/v1/namespaces/madavila-quotes-dev/secrets/deployer-token-w94g2
    uid: 360d6b8f-67c9-42cc-a3e3-12c0fb6e2445
  type: kubernetes.io/service-account-token
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: "2020-12-08T15:37:15Z"
    labels:
      app: quotesapi
      app.kubernetes.io/component: quotesapi
      app.kubernetes.io/instance: quotesapi
    managedFields:
    - apiVersion: build.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
        f:spec:
          f:output:
            f:to:
              .: {}
              f:kind: {}
              f:name: {}
          f:runPolicy: {}
          f:source:
            f:contextDir: {}
            f:git:
              .: {}
              f:uri: {}
            f:type: {}
          f:strategy:
            f:sourceStrategy:
              .: {}
              f:from:
                .: {}
                f:kind: {}
                f:name: {}
                f:namespace: {}
            f:type: {}
      manager: oc
      operation: Update
      time: "2020-12-08T15:37:15Z"
    - apiVersion: build.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:triggers: {}
        f:status:
          f:lastVersion: {}
      manager: openshift-apiserver
      operation: Update
      time: "2020-12-08T15:37:15Z"
    name: quotesapi
    namespace: madavila-quotes-dev
    resourceVersion: "70057542"
    selfLink: /apis/build.openshift.io/v1/namespaces/madavila-quotes-dev/buildconfigs/quotesapi
    uid: 07468150-13fe-48b5-8e35-7150dd088ae5
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: quotesapi:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: quotes
      git:
        uri: https://github.com/madviewnext/DO288-apps
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: php:7.2
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: g77PJy_9-bjsSlWeK4O7
      type: GitHub
    - generic:
        secret: 6oBdsKqbYXKG7eMZgwZL
      type: Generic
    - type: ConfigChange
    - imageChange:
        lastTriggeredImageID: image-registry.openshift-image-registry.svc:5000/openshift/php@sha256:feb82582395558abc7823cff3800753aaa7bf976c5a4869bc921dd53e7eef447
      type: ImageChange
  status:
    lastVersion: 1
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: "2020-12-08T15:37:15Z"
    generation: 2
    labels:
      app: quotesapi
      app.kubernetes.io/component: quotesapi
      app.kubernetes.io/instance: quotesapi
    managedFields:
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
        f:spec:
          f:replicas: {}
          f:selector:
            .: {}
            f:deploymentconfig: {}
          f:strategy:
            f:activeDeadlineSeconds: {}
            f:rollingParams:
              .: {}
              f:intervalSeconds: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
              f:timeoutSeconds: {}
              f:updatePeriodSeconds: {}
            f:type: {}
          f:template:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:creationTimestamp: {}
              f:labels:
                .: {}
                f:deploymentconfig: {}
            f:spec:
              .: {}
              f:containers:
                .: {}
                k:{"name":"quotesapi"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"DATABASE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DATABASE_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DATABASE_SERVICE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DATABASE_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: oc
      operation: Update
      time: "2020-12-08T15:37:15Z"
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"quotesapi"}:
                  f:image: {}
          f:triggers: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:details:
            .: {}
            f:causes: {}
            f:message: {}
          f:latestVersion: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2020-12-08T15:38:01Z"
    name: quotesapi
    namespace: madavila-quotes-dev
    resourceVersion: "70057989"
    selfLink: /apis/apps.openshift.io/v1/namespaces/madavila-quotes-dev/deploymentconfigs/quotesapi
    uid: 67bc2e2f-6567-4faf-af86-2e001793c809
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: quotesapi
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deploymentconfig: quotesapi
      spec:
        containers:
        - env:
          - name: DATABASE_NAME
            value: quotesdb
          - name: DATABASE_PASSWORD
            value: redhat
          - name: DATABASE_SERVICE_NAME
            value: quotesdb
          - name: DATABASE_USER
            value: quoteapp
          image: image-registry.openshift-image-registry.svc:5000/madavila-quotes-dev/quotesapi@sha256:b44ed7c9bf5df410c626beee14b139b4e52bafc4fb6d39674c5005c47923fffb
          imagePullPolicy: Always
          name: quotesapi
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - quotesapi
        from:
          kind: ImageStreamTag
          name: quotesapi:latest
          namespace: madavila-quotes-dev
        lastTriggeredImage: image-registry.openshift-image-registry.svc:5000/madavila-quotes-dev/quotesapi@sha256:b44ed7c9bf5df410c626beee14b139b4e52bafc4fb6d39674c5005c47923fffb
      type: ImageChange
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-12-08T15:38:00Z"
      lastUpdateTime: "2020-12-08T15:38:00Z"
      message: Deployment config has minimum availability.
      status: "True"
      type: Available
    - lastTransitionTime: "2020-12-08T15:37:55Z"
      lastUpdateTime: "2020-12-08T15:38:01Z"
      message: replication controller "quotesapi-1" successfully rolled out
      reason: NewReplicationControllerAvailable
      status: "True"
      type: Progressing
    details:
      causes:
      - type: ConfigChange
      message: config change
    latestVersion: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    unavailableReplicas: 0
    updatedReplicas: 1
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: "2020-12-08T15:37:02Z"
    generation: 3
    labels:
      app: quotesdb
      app.kubernetes.io/component: quotesdb
      app.kubernetes.io/instance: quotesdb
      app.kubernetes.io/name: mysql
    managedFields:
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:spec:
          f:replicas: {}
          f:selector:
            .: {}
            f:deploymentconfig: {}
          f:strategy:
            f:activeDeadlineSeconds: {}
            f:rollingParams:
              .: {}
              f:intervalSeconds: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
              f:timeoutSeconds: {}
              f:updatePeriodSeconds: {}
            f:type: {}
          f:template:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:creationTimestamp: {}
              f:labels:
                .: {}
                f:deploymentconfig: {}
            f:spec:
              .: {}
              f:containers:
                .: {}
                k:{"name":"quotesdb"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"MYSQL_DATABASE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MYSQL_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"MYSQL_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":3306,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"quotesdb-volume-1"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: oc
      operation: Update
      time: "2020-12-08T15:37:02Z"
    - apiVersion: apps.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"quotesdb"}:
                  f:image: {}
          f:triggers: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:details:
            .: {}
            f:causes: {}
            f:message: {}
          f:latestVersion: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2020-12-08T15:37:12Z"
    name: quotesdb
    namespace: madavila-quotes-dev
    resourceVersion: "70057521"
    selfLink: /apis/apps.openshift.io/v1/namespaces/madavila-quotes-dev/deploymentconfigs/quotesdb
    uid: 8c597887-60d7-4533-8293-51c63118072e
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: quotesdb
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deploymentconfig: quotesdb
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            value: quotesdb
          - name: MYSQL_PASSWORD
            value: redhat
          - name: MYSQL_USER
            value: quoteapp
          image: image-registry.openshift-image-registry.svc:5000/openshift/mysql@sha256:9a781abe7581cc141e14a7e404ec34125b3e89c008b14f4e7b41e094fd3049fe
          imagePullPolicy: IfNotPresent
          name: quotesdb
          ports:
          - containerPort: 3306
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: quotesdb-volume-1
          persistentVolumeClaim:
            claimName: quotesdb-claim
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - quotesdb
        from:
          kind: ImageStreamTag
          name: mysql:5.7
          namespace: openshift
        lastTriggeredImage: image-registry.openshift-image-registry.svc:5000/openshift/mysql@sha256:9a781abe7581cc141e14a7e404ec34125b3e89c008b14f4e7b41e094fd3049fe
      type: ImageChange
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-12-08T15:37:11Z"
      lastUpdateTime: "2020-12-08T15:37:11Z"
      message: Deployment config has minimum availability.
      status: "True"
      type: Available
    - lastTransitionTime: "2020-12-08T15:37:12Z"
      lastUpdateTime: "2020-12-08T15:37:12Z"
      message: replication controller "quotesdb-1" successfully rolled out
      reason: NewReplicationControllerAvailable
      status: "True"
      type: Progressing
    details:
      causes:
      - type: ConfigChange
      message: config change
    latestVersion: 1
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    unavailableReplicas: 0
    updatedReplicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: "2020-12-08T15:37:15Z"
    labels:
      app: quotesapi
      app.kubernetes.io/component: quotesapi
      app.kubernetes.io/instance: quotesapi
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":8080,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":8443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: oc
      operation: Update
      time: "2020-12-08T15:37:15Z"
    name: quotesapi
    namespace: madavila-quotes-dev
    resourceVersion: "70057536"
    selfLink: /api/v1/namespaces/madavila-quotes-dev/services/quotesapi
    uid: c3a58fc4-27a7-4e93-8850-3bf40655da61
  spec:
    clusterIP: 172.30.42.122
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      deploymentconfig: quotesapi
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: "2020-12-08T15:37:02Z"
    labels:
      app: quotesdb
      app.kubernetes.io/component: quotesdb
      app.kubernetes.io/instance: quotesdb
      app.kubernetes.io/name: mysql
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:spec:
          f:ports:
            .: {}
            k:{"port":3306,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:deploymentconfig: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: oc
      operation: Update
      time: "2020-12-08T15:37:02Z"
    name: quotesdb
    namespace: madavila-quotes-dev
    resourceVersion: "70057372"
    selfLink: /api/v1/namespaces/madavila-quotes-dev/services/quotesdb
    uid: 950b9d7d-e8cc-49e1-99fa-988648532102
  spec:
    clusterIP: 172.30.76.45
    ports:
    - name: 3306-tcp
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      deploymentconfig: quotesdb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: "2020-12-08T15:38:02Z"
    labels:
      app: quotesapi
      app.kubernetes.io/component: quotesapi
      app.kubernetes.io/instance: quotesapi
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
        f:spec:
          f:port:
            .: {}
            f:targetPort: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: oc
      operation: Update
      time: "2020-12-08T15:38:02Z"
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      time: "2020-12-08T15:38:02Z"
    name: quotesapi
    namespace: madavila-quotes-dev
    resourceVersion: "70058001"
    selfLink: /apis/route.openshift.io/v1/namespaces/madavila-quotes-dev/routes/quotesapi
    uid: a2fc5d80-0fcd-467d-8892-3237193b5cf4
  spec:
    host: quotesapi-madavila-quotes-dev.apps.eu45.prod.nextcle.com
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: quotesapi
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2020-12-08T15:38:02Z"
        status: "True"
        type: Admitted
      host: quotesapi-madavila-quotes-dev.apps.eu45.prod.nextcle.com
      routerCanonicalHostname: apps.eu45.prod.nextcle.com
      routerName: default
      wildcardPolicy: None
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/cinder
      volume.kubernetes.io/selected-node: eu45-tj76l-worker-jczhr
    creationTimestamp: "2020-12-08T15:37:02Z"
    finalizers:
    - kubernetes.io/pvc-protection
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:accessModes: {}
          f:resources:
            f:requests:
              .: {}
              f:storage: {}
          f:volumeMode: {}
      manager: oc
      operation: Update
      time: "2020-12-08T15:37:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:volume.kubernetes.io/selected-node: {}
      manager: kube-scheduler
      operation: Update
      time: "2020-12-08T15:37:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:pv.kubernetes.io/bind-completed: {}
            f:pv.kubernetes.io/bound-by-controller: {}
            f:volume.beta.kubernetes.io/storage-provisioner: {}
        f:spec:
          f:volumeName: {}
        f:status:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:phase: {}
      manager: kube-controller-manager
      operation: Update
      time: "2020-12-08T15:37:08Z"
    name: quotesdb-claim
    namespace: madavila-quotes-dev
    resourceVersion: "70057459"
    selfLink: /api/v1/namespaces/madavila-quotes-dev/persistentvolumeclaims/quotesdb-claim
    uid: 751f6aae-a668-4e86-9fc5-81526bdaa7aa
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 300Mi
    storageClassName: standard
    volumeMode: Filesystem
    volumeName: pvc-751f6aae-a668-4e86-9fc5-81526bdaa7aa
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 1Gi
    phase: Bound
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
